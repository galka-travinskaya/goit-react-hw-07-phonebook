{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Logo/Logo.module.css","App.module.css","components/Alert/Alert.module.css","transition/Transition.module.css","components/ContactList/transitions/ContactTransition.module.css","components/Header/Header.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Logo/Logo.js","components/Header/Header.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","id","delete","get","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","alertRoot","document","querySelector","Alert","createPortal","className","s","popup","this","props","children","Component","ContactForm","showAlert","errorMessage","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","find","toggleAlert","onSubmit","reset","message","setTimeout","form","CSSTransition","in","timeout","classNames","alert","unmountOnExit","label","text","type","onChange","form__btn","connect","newName","contactsOperations","ContactList","JSON","stringify","localStorage","setItem","allContacts","onRemove","TransitionGroup","component","list","length","map","contactTransition","delete_btn","onClick","target","filter__input","Logo","appear","title","Header","container","App","fetchContacts","section","createReducer","payload","_","loading","combineReducers","store","configureStore","reducer","contactsReduser","devTools","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.11a97f1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__i-0FJ\",\"label\":\"ContactForm_label__XPSV3\",\"text\":\"ContactForm_text__1WWUr\",\"form__btn\":\"ContactForm_form__btn__On3o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1aOpY\",\"items\":\"ContactList_items__1ybsM\",\"text\":\"ContactList_text__VK1Ju\",\"delete_btn\":\"ContactList_delete_btn__15jxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1CwjH\",\"filter__input\":\"Filter_filter__input__3te7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Logo_appear__2Cb7n\",\"appearActive\":\"Logo_appearActive__3i3iY\",\"title\":\"Logo_title__1i9vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__1BP7Z\",\"exit\":\"App_exit__3h0WZ\",\"container\":\"App_container__3b4lY\",\"section\":\"App_section__2DxHs\",\"text\":\"App_text__wn5gK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Alert_popup__3qup4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Transition_enter__2KvqE\",\"enterActive\":\"Transition_enterActive__1nlN3\",\"exit\":\"Transition_exit__2Og7h\",\"exitActive\":\"Transition_exitActive__1kUb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactTransition_enter__1G3NW\",\"enterActive\":\"ContactTransition_enterActive__2_4BL\",\"exit\":\"ContactTransition_exit__1koQf\",\"exitActive\":\"ContactTransition_exitActive__1c1Hj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3v9Kn\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuid } from \"uuid\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactsError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Alert.module.css';\r\n\r\nconst alertRoot = document.querySelector('#popap-root');\r\n\r\nexport default class Alert extends Component {\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.popup}>{this.props.children} </div>,\r\n      alertRoot,\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport Alert from \"../Alert\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\nimport alert from \"../../transition/Transition.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showAlert: false,\r\n    errorMessage: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (!name || !number) {\r\n      this.toggleAlert(\"The list is empty\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.props.contacts.find(\r\n        ({ name }) => name.toLowerCase() === this.state.name.toLowerCase()\r\n      )\r\n    ) {\r\n      this.toggleAlert(\"Contact is already exist\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  toggleAlert = (message) => {\r\n    this.setState({ showAlert: true, errorMessage: message });\r\n    setTimeout(() => this.setState({ showAlert: false }), 1000);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showAlert, errorMessage } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <CSSTransition\r\n          in={showAlert}\r\n          timeout={250}\r\n          classNames={alert}\r\n          unmountOnExit\r\n        >\r\n          <Alert>\r\n            <p>{errorMessage}</p>\r\n          </Alert>\r\n        </CSSTransition>\r\n        <label className={s.label}>\r\n          <span className={s.text}>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          <span className={s.text}>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.form__btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (newName, number) =>\r\n    dispatch(contactsOperations.addContact(newName, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport contactTransition from './transitions/ContactTransition.module.css';\r\nimport {\r\n  getVisibleContacts,\r\n  getContacts,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  componentDidUpdate() {\r\n    const contacts = JSON.stringify(this.props.contacts);\r\n    localStorage.setItem('saveContacts', contacts);\r\n  }\r\n\r\n  render() {\r\n    const { contacts, allContacts, onRemove } = this.props;\r\n    return (\r\n      <>\r\n        <TransitionGroup component=\"ul\" className={s.list}>\r\n          {contacts.length === 0 && allContacts.length !== 0 ? (\r\n            <CSSTransition in={true} timeout={0} unmountOnExit>\r\n              <li className={s.text}>Countact is not founding</li>\r\n            </CSSTransition>\r\n          ) : (\r\n            contacts.map(({ name, number, id }) => (\r\n              <CSSTransition\r\n                key={id}\r\n                classNames={contactTransition}\r\n                timeout={250}\r\n              >\r\n                <li className={s.items}>\r\n                  <p className={s.text}>\r\n                    {name}: {number}\r\n                  </p>\r\n                  <button\r\n                    className={s.delete_btn}\r\n                    type=\"button\"\r\n                    onClick={() => onRemove(id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              </CSSTransition>\r\n            ))\r\n          )}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n    allContacts: getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport {\r\n  getFilter,\r\n  getContacts,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange, contacts }) => {\r\n  return (\r\n    <>\r\n      {contacts.length === 0 ? (\r\n        <CSSTransition in={true} timeout={0} unmountOnExit>\r\n          <p className={s.text}>Please, add a new contact</p>\r\n        </CSSTransition>\r\n      ) : (\r\n        <CSSTransition in={true} timeout={250} classNames={s} unmountOnExit>\r\n          <label className={s.filter}>\r\n            <span>Find contacts by name</span>\r\n            <input\r\n              className={s.filter__input}\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          </label>\r\n        </CSSTransition>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <>\r\n      <CSSTransition in={true} appear={true} classNames={s} timeout={500}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport Logo from '../Logo';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={s.container}>\r\n      <Logo />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Header from \"./components/Header\";\nimport contactsOperations from \"./redux/contacts/contacts-operations\";\n\nimport s from \"./App.module.css\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <section className={s.section}>\n          <div className={s.container}>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n\n            <ContactList />\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import initialContacts from '../../data/contacts.json';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReduser from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\n// console.log(store);\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}